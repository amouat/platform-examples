name: build

on:
  pull_request:
  push:
  workflow_dispatch:

# permission can be added at job level or workflows level
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout
  packages: write # push to GHCR

env:
  GO_VERSION: 1.19.4

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [github-issue-opener, slack-webhook]

    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v2.4.0

      - uses: actions/setup-go@d0a58c1c4d2b25278816e339b944508c875f3613 # v3.0.0
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true

      - run: go version

      - name: Install Cosign
        uses: sigstore/cosign-installer@9becc617647dfa20ae7b1151972e9b3a2c338a2b
        with:
          cosign-release: 'v1.13.1'

      - name: Check install - cosign!
        run: cosign version

      - name: Cosign login
        shell: bash
        run: |
          cosign login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}

      - uses: imjasonh/setup-ko@ace48d793556083a76f1e3e6068850c1f4a369aa

      - name: Build
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            KO_DOCKER_REPO: ghcr.io/chainguard-dev/${{matrix.image}}
        run: |
          cd ${{matrix.image}}/cmd/app 
          ko build -v --image-refs ko.images --bare .

      - name: Signing
        env:
          COSIGN_EXPERIMENTAL: true
        run: |
          cosign sign $(cat ko.images)

      - name: Sbom Attest
        env:
          COSIGN_EXPERIMENTAL: true
        run:
          cosign download sbom $(cat ko.images) --output-file bom.spdx.json
    
          cosign attest --timeout=0 --force --type spdxjson --predicate bom.spdx.json $(cat ko.images)
    
          cosign verify-attestation --type spdxjson $(cat ko.images)
